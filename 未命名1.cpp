//Author: 张景豪
//Time；2019/8/1

/*
 *  这里 // 等 为注释符 不参与程序的运行编译
 *  一个程序可以由头文件与主函数组成
 *                      C++/C入门-基础篇
 * */

#include <iostream>
#include <stdio.h>

//      上面两个是常见的头文件，至于头文件该如何理解下面会提到
//      所谓头文件，里面已经包含了写好的函数在后来的主函数中可以直接调用
//      常见的头文件还有 math.h (包含一些特殊的数学运算） string，h （针对字符串的头文件） 等等

int main() {
    int a ;
    //上一行是对变量的定义 int 代表整型定义也就是整数定义， 当语句结束后，必须加上' ； '代表语句结束，有一些特殊语句不需要
    //常见的定义还有
    //    char        //字符定义
    //    float t;    //浮点数定义（小数）
    //    double k;   //双浮点数定义（定义的数据范围较大）
    //    long l;     //长整型定义（定义的数据范围比int大）同理存在short定义
    //    bool j;     //布尔定义（用的较少）存在“YES”，“NO”两个值，在C语言中对应
    //    对于不同类型的数据我们需要对它的范围简单来说就是可以装得下的数字大小进行讨论，下面是各种定义的范围
    //                              各种类型可以参考下表
    //     类型名称          占字节数      其他叫法          表示的数据范围
    //     char              1         signed char         -128 ~ 127
    //     unsigned char     1            none              0 ~ 255
    //     int               4           signed int        -2,147,483,648 ~ 2,147,483,647
    //     unsigned int      4          unsigned            0 ~ 4,294,967,295
    //     short             2         short int           -32,768 ~ 32,767
    //     unsigned short    2       unsigned short int     0 ~ 65,535
    //     long              4          long int           -2,147,483,648 ~ 2,147,483,647
    //     unsigned long     4        unsigned long         0 ~ 4,294,967,295
    //     float             4            none              3.4E +/- 38 (7 digits)
    //     double            8            none              1.7E +/- 308 (15 digits)
    //     long double       10           none              1.2E +/- 4932 (19 digits)
    //  一般 int 、 float 装不下的 可以使用 long 、 double 实在不行还有 long long 、 double double 的操作


    //  现在我们来研究第一个程序的代码，如下：
    printf("Hello World!\n") ;

    // 首先我们对printf（）函数进行解释，它是stdio.h带的一个函数，按特定格式写括号中的内容可以输出一些数据
    // printf 函数的结构  printf(“格式控制字符串”,输出表项) ；
    // 字符串中出现的特殊字符组合要特别注意 比如 \n 、 %d  、  %s 等等，接下来会对它们系统地整理
    //
    //字符中有一类十分特殊的字符，它们的开头带着 ’\‘ ，我们称这种字符为转义字符
    //
    //                        现在我们来归纳一下转义字符及其作用
    //
    //     转义字符                      字符值                      输出结果
    //     \'                         一个单撇号（‘）              输出单撇号字符 ’
    //     \"                         一个双撇号（“）              输出双撇号字符 ”
    //     \?                         一个问号（？）               输出问号字符 ？
    //     \\                         一个反斜杠（\)               输出反斜杠字符 \
    //     \a                         警告（alert）               产生声音或者视觉信号
    //     \b                         退格                       将光标的当前位置后退一个字符
    //     \f                         换页                       将光标的当前位置移到下一页的开头
    //     \n                         换行                       将光标的当前位置移到下一行的开头
    //     \r                         回车                       将光标的当前位置移到本行的开头
    //     \t                         水平制表符                  将光标的当前位置移到下一个 Tab 的位置
    //     \v                         垂直制表符                  将光标的当前位置移到下一个垂直制表符对齐点
    //     \o、\oo 或者 \ooo           与该八进制码对应的ASCII字符   与该八进制码对应的字符
    //     \xh[h...]其中h表示一个16进制数字     与该十六进制码对应的ASICII字符  与该十六进制码对应的ASICII字符
    //
    //                %d――――――整型变量
    //                %c――――――字符变量
    //                %s――――――字符串
    //                %f――――――浮点数变量
    //                %ld――――-长整型变量
    //                %lf――――-长浮点变量
    //
    //      使用过类似 %d 的字符组合后在双引号后要按顺序写入各变量的名称，中间使用' ， ' 逗号隔开

    scanf("%d",&a) ;

    //  上面这个语句代表输入语句，与printf 函数相似，但是后面的变量名一定要加上 " & " 地址符号
    //  初学者对此不必深究，当作特定格式即可，这个语句代表的是输入 a 变量的值

    printf("%d",a);

    //  输入 a 的值

    return 0;
}
