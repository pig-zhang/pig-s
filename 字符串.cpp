//Author:张景豪
//Time:2019/8/2

//                      C++/C入门-基础篇-字符串

#include <iostream>
#include <stdio.h>
//----------------------以下为常用的头文件---------------------------
#include <string.h>         //strring,h 对字符串的处理中需要使用到它
#include <math.h>           //math.h 某些特殊的数学计算需要使用到它
//       头文件

using namespace std;        //C++ 中用来省略命名空间 ‘std：：’，在后面会提到，对程序有简化作用

int main() {

    //  何为字符串呢？
    //  字符串或串(String)是由数字、字母、下划线等组成的一串字符。

    char a ;
    //   字符定义

    //  已知了一个字符该如何定义，那么字符串该如何定义呢？
    //  按照定义可以知道，字符串是由许多的字符组合而成，那么这时候就要引入数组的概念了
    //  什么是数组呢？简单来说就是把一堆的数据存放在一个个小房间里的容器
    //  数组与循环结构经常联系在一起，以后会提到
    //  如何理解，看下面的这个定义例子 

    char str[50] ;
    //   定义了一个可以存放50个字符的字符数组

    //  如何输入字符/字符串的值呢？
    //  可以使用前面说过的 scanf 或者等下会提到的 getchar/gets 方法
    //  有一点这里要先说明，sacnf 的输入不同于 getchar/gets ，它遇到空格即为结束输入，但是它们遇到回车皆为结束输入

    scanf("%c",&a);
    a = getchar();

    //   为字符的两种输入方式，scanf 在此不再赘述
    //  getchar 的含义为 从键盘上读取一个字符，所以它经常单独使用来作为程序中间的一个小中止，做暂停标志

    scanf("%s",&str) ;
    gets(str) ;

    //                 为字符串的两种输入方式，需要特殊记忆的是 gets 方法
    //                gets函数里放入所定义的数组名即可输入字符串，十分方便
    //                但是因为gets函数易受蠕虫病毒的影响，所以不是很安全
    //                但是我们入门并不需要考虑这些，了解便可

    printf("%c \n %s", a, str) ;
    puts(str) ;
    putchar(a) ;

    //  上面是字符/字符串的几种常见的输出方式，printf 函数便不多赘述
    //  putchar 常用于字符的输出， puts 常用于字符串的输出

    //  下面会提及关于字符串处理的许多函数，进行些许记忆经常使用就不会忘记

    //                计算字符串长度： strlen（），括号内放入需要计算长度的的字符数组的名即可返回字符串的长度
    //                用法为 int len = strlen（ a ）； //len 赋值以 a 数组的长度
    //
    //                连接字符串： strcat（ ... , ... ) ,括号内放入需要连接的字符串名，两个字符串名之间使用
    //                逗号 ‘，’ 隔开。 用法为 strcat（ a ， b ） //直接调用即可,最后连接完的字符出串储存在a数组中
    //
    //                复制字符串： strcpy（ ... , ... ）,括号内放入需要复制和需要被复制的数组
    //                用法为 strcpy （ a ， b ）； //直接调用，将 b 复制到 a 中
    //
    //                复制字符串的另一种函数：strncpy（ ... , ... + POS , n ），形式与strcpy相似，但是多了POS和n
    //                省略号出依然同strcpy函数，POS 代表复制的起点位置，n代表复制的位数
    //                用法为 strrncpy（ a ，b+3 ，5 ）； //表示把 b 数组的第三位起的5位字符复制给 a 数组
    //
    //                字符串比较： strcmp（ ... , ... ) ,括号内直接放入需要比较的两个字符串名即可
    //                用法为 int f = strcmp （ a ， b ）； //它的返回值有三类
    //                若返回值等于 0 ，则表示 a ， b 字符串相同 没错是 返回值为 0 ！
    //                若返回值大于 0 ，则表示 a 字符串的长度大于 b
    //                若返回值小于 0 ，则表示 a 字符串的长度小于 b
    //                根据它返回值存在 0 的关系，我们完全可以将它应用与：if、while等语句中
    //
    //                知道这些关于字符串处理的函数，我们对字符串的处理就显得格外的简单，如果之前我们要实现
    //                字符串的比较，要动用 for 循环写长长的代码，现在就不需要了
    //
    //                还有一个小小的注意点，由于我们对于整数的定义范围十分有限，这时候我们可以借用字符串
    //                传化为整数的关系来实现  “定义范围的扩大”   ，可就需要for循环的帮助了。
    return 0;
}
